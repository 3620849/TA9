{"version":3,"sources":["./src/app/user-page/user-page.component.ts","./src/app/user-page/user-page.component.html","./src/app/admin-page/admin-page.component.ts","./src/app/admin-page/admin-page.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/shared/project-material/project-material.module.ts","./src/app/app.module.ts","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/app/app-routing.module.ts","./src/app/services/communication.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.scss']\n})\nexport class UserPageComponent implements OnInit {\n  panelOpenState=true;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"userContainer\">\n    <mat-card class=\"example-card\">\n        <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title>Hi user your id is : 123456</mat-card-title>\n            <mat-card-subtitle>status: ONLINE</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image src=\"/assets/dog.png\" alt=\"Photo of a Shiba Inu\">\n  \n        <mat-card-content>\n            <p>\n                While you looking at this dog we keep tracking you presense at website. If you will change tab to admin\n                page\n                tracking your presense will be stoped and you state will be OFFLINE. Thank you.\n            </p>\n        </mat-card-content>\n        <mat-card-actions>\n            <mat-accordion>\n                <mat-expansion-panel (opened)=\"panelOpenState = true\" (closed)=\"panelOpenState = false\">\n                    <mat-expansion-panel-header>\n                        <mat-panel-title>\n                            More inormation about me\n                        </mat-panel-title>\n                        <mat-panel-description>\n                            press here\n                        </mat-panel-description>\n                    </mat-expansion-panel-header>\n                    <p>Screen resolution: 1200x700</p>\n                    <p>language: Hebrew</p>\n                    <p>local time: 20:16</p>\n                    <p>ip address is :0.0.0.0</p>\n                </mat-expansion-panel>\n            </mat-accordion>\n        </mat-card-actions>\n    </mat-card>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription,interval } from 'rxjs';\nimport { CommunicationService } from '../services/communication.service';\n\n@Component({\n  selector: 'app-admin-page',\n  templateUrl: './admin-page.component.html',\n  styleUrls: ['./admin-page.component.scss']\n})\nexport class AdminPageComponent implements OnInit,OnDestroy {\n  subscriptions: Subscription[]=[] ;\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  rabbitLog ;\n  dataSource = ELEMENT_DATA;\n  interval;\n  constructor(private cs:CommunicationService) { }\n  \n  ngOnDestroy(): void {\n    clearInterval(this.interval);\n    this.subscriptions.forEach(s=>s.unsubscribe());\n  }\n\n  ngOnInit(): void {\n    this.interval=setInterval(()=>{\n      this.getLog();\n    },5000);\n  }\n  getLog(){ \n    this.cs.getRabbitLog().subscribe(res=>{\n      if(res.messages){\n        let str=\"\";\n        res.messages.forEach(s=>str.concat(s+\"\\n\"));\n        this.rabbitLog=str;\n      }\n    },err=>{});\n  }\n}\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n];","<div class=\"adminContainer\">\n    <div class=\"tableCont\">\n        <div class=\"textBlock\">\n            <span class=\"txt\">This is table from log server at localhost:8080</span>\n        </div>\n        <div>\n        <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n            <!--- Note that these columns can be defined in any order.\n                  The actual rendered columns are set as a property on the row definition\" -->\n          \n            <!-- Position Column -->\n            <ng-container matColumnDef=\"position\">\n              <th mat-header-cell *matHeaderCellDef> No. </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n            </ng-container>\n          \n            <!-- Name Column -->\n            <ng-container matColumnDef=\"name\">\n              <th mat-header-cell *matHeaderCellDef> Name </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n            </ng-container>\n          \n            <!-- Weight Column -->\n            <ng-container matColumnDef=\"weight\">\n              <th mat-header-cell *matHeaderCellDef> Weight </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n            </ng-container>\n          \n            <!-- Symbol Column -->\n            <ng-container matColumnDef=\"symbol\">\n              <th mat-header-cell *matHeaderCellDef> Symbol </th>\n              <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n            </ng-container>\n          \n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          </table>\n        </div>  \n          \n\n    </div>\n    <div class=\"log\">\n        <div class=\"options\">\n            <span>\n            <button   mat-stroked-button color=\"primary\"> \n                <mat-icon>refresh</mat-icon>\n              </button>\n            </span>\n            <span class=\"txt\">refresh all </span>\n            <span class=\"txt\">This is log from log server at localhost:8081</span>\n        </div>\n        <div class=\"logBlock\">\n            <textarea  [disabled]=\"true\">{{rabbitLog}}\n            </textarea>\n        </div>\n        \n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  producer_server:\"http:/localhost:8080\",\n  consumer_server:\"http:/localhost:8081\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'TA9client';\n}\n","<div class=\"main\">\n  <app-top-bar class=\"top-bar-container\"></app-top-bar> \n  <router-outlet></router-outlet> \n</div>","import { NgModule } from '@angular/core';\nimport {MatToolbarModule} from '@angular/material/toolbar'; \nimport {MatIconModule} from '@angular/material/icon'; \nimport {MatButtonModule} from '@angular/material/button'; \nimport {MatCardModule} from '@angular/material/card'; \nimport {MatExpansionModule} from '@angular/material/expansion'; \nimport {MatFormFieldModule} from '@angular/material/form-field'; \nimport {MatTableModule} from '@angular/material/table'; \n@NgModule({\n  declarations: [],\n  exports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatTableModule\n  ]\n})\nexport class ProjectMaterialModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { ProjectMaterialModule } from './shared/project-material/project-material.module';\nimport { UserPageComponent } from './user-page/user-page.component';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommunicationService } from './services/communication.service';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    UserPageComponent,\n    AdminPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ProjectMaterialModule,\n    HttpClientModule\n  ],\n  providers: [\n    CommunicationService, {provide : APP_INITIALIZER, useFactory : initFunction, deps: [CommunicationService] , multi : true}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\nexport function initFunction(config : CommunicationService)\n{\n  return ()=> config.init();\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"white\">\n    <mat-toolbar-row>\n        <button  class=\"logo-btn\" disabled mat-icon-button>\n            <img class=\"logo\"src=\"assets/logo.png\" >                \n        </button>\n      <span class=\"example-spacer\"></span>\n      <button routerLink=\"/user\" mat-stroked-button color=\"primary\"> \n        <mat-icon>supervised_user_circle</mat-icon>\n      </button>\n      <button routerLink=\"/admin\" mat-stroked-button color=\"primary\"> \n        <mat-icon>verified_user</mat-icon>\n      </button>\n    </mat-toolbar-row>\n</mat-toolbar>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminPageComponent } from './admin-page/admin-page.component';\nimport { UserPageComponent } from './user-page/user-page.component';\nconst routes: Routes = [\n  {path:'',component:UserPageComponent},\n  {path:'user',component:UserPageComponent},\n  {path:'admin',component:AdminPageComponent}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { MessagesDto } from '../models/messsagesDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommunicationService {\n\n  constructor(private http:HttpClient) {      \n   }\n   public init(){\n    console.log(\"RUN!\");//ffdfd\n    console.log(\"RUN!\");//ffdfd\n    console.log(\"RUN!\");//ffdfd\n   }\n   getRabbitLog(){\n     return this.http.get<MessagesDto>(environment.consumer_server+\"/messages\");\n   }\n\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}